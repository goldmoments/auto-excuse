if not dmsgs then return end
--if autoexcuse then return end

--getgenv().autoexcuse = true

local DeathMessages = dmsgs.deathmessages

local ReplicatedStorage = cloneref(game:GetService("ReplicatedStorage")) or game:GetService("ReplicatedStorage")
local TextChatService = cloneref(game:GetService("TextChatService")) or game:GetService("TextChatService")
local Players = cloneref(game:GetService("Players")) or game:GetService("Players")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

local function ChatDeathMessage()
	local Message = DeathMessages[math.random(1, #DeathMessages)]
	
	task.wait(tonumber("1.".. string.len(Message) * 2))
	
	if TextChatService.ChatVersion ~= Enum.ChatVersion.LegacyChatService then
		TextChatService.TextChannels.RBXGeneral:SendAsync(Message)
	else
		ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(Message, "All")
	end
end

if LocalPlayer.Character then
	LocalPlayer.Character:WaitForChild("Humanoid").Died:Connect(ChatDeathMessage)
end

LocalPlayer.CharacterAdded:Connect(function(Character)
	Character:WaitForChild("Humanoid").Died:Connect(ChatDeathMessage)
end)
